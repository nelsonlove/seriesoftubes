$schema: https://json-schema.org/draft/2020-12/schema
title: SeriesOfTubes Workflow Schema
description: Schema definition for SeriesOfTubes workflow YAML files
type: object
required:
  - name
  - nodes
properties:
  name:
    type: string
    description: Human-readable name for the workflow
    examples:
      - Company Enrichment Pipeline
      - Document Analysis Workflow

  description:
    type: string
    description: Detailed description of what the workflow does

  version:
    type: string
    pattern: "^\\d+\\.\\d+\\.\\d+$"
    description: Semantic version of the workflow
    default: "1.0.0"
    examples:
      - "1.0.0"
      - "2.1.3"

  inputs:
    type: object
    description: Input parameters for the workflow
    additionalProperties:
      oneOf:
        - type: string
          description: "Shorthand for {type: string, required: true}"
        - type: object
          properties:
            type:
              type: string
              default: string
            required:
              type: boolean
              default: true
            default:
              description: Default value if not provided

  nodes:
    type: object
    description: DAG nodes that make up the workflow
    additionalProperties:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum: [ llm, http, route, file, python ]
          description: Type of node to execute

        description:
          type: string
          description: Human-readable description of what this node does

        depends_on:
          type: array
          items:
            type: string
          description: List of node names this node depends on
          default: [ ]

        config:
          type: object
          description: Node-specific configuration
          oneOf:
            - $ref: "#/definitions/llm_config"
            - $ref: "#/definitions/http_config"
            - $ref: "#/definitions/route_config"
            - $ref: "#/definitions/file_config"
            - $ref: "#/definitions/python_config"

  outputs:
    type: object
    description: Map output names to node names
    additionalProperties:
      type: string
    examples:
      - company_info: classify_company
        github_data: fetch_github
        analysis: deep_analysis

definitions:
  llm_config:
    type: object
    properties:
      provider:
        type: string
        enum: [ openai, anthropic ]
        default: openai
        description: LLM provider to use

      model:
        type: string
        description: Model identifier
        examples:
          - gpt-4
          - claude-3-opus-20240229

      prompt:
        type: string
        description: Inline prompt template (Jinja2)

      prompt_template:
        type: string
        description: Path to external prompt template file

      context:
        type: object
        description: Map context variables from other nodes
        additionalProperties:
          type: string
        examples:
          - data: fetch_data
            classification: classify_company

      schema:
        type: object
        description: JSON schema for structured extraction
        additionalProperties: true

      temperature:
        type: number
        minimum: 0
        maximum: 2
        default: 0.7
        description: LLM temperature setting

      max_tokens:
        type: integer
        minimum: 1
        description: Maximum tokens in response
    oneOf:
      - required: [ prompt ]
      - required: [ prompt_template ]

  http_config:
    type: object
    required:
      - url
    properties:
      url:
        type: string
        format: uri
        description: HTTP endpoint URL (supports Jinja2 templates)

      method:
        type: string
        enum: [ GET, POST, PUT, DELETE, PATCH ]
        default: GET
        description: HTTP method

      headers:
        type: object
        description: HTTP headers (supports Jinja2 templates)
        additionalProperties:
          type: string

      body:
        description: Request body (supports Jinja2 templates)

      auth:
        type: object
        description: Authentication configuration
        properties:
          type:
            type: string
            enum: [ bearer, basic, api_key ]
          token:
            type: string
            description: Auth token (supports env vars via Jinja2)
          header:
            type: string
            description: Header name for API key auth

      context:
        type: object
        description: Map context variables from other nodes
        additionalProperties:
          type: string

  route_config:
    type: object
    required:
      - routes
    properties:
      context:
        type: object
        description: Map context variables from other nodes
        additionalProperties:
          type: string

      routes:
        type: array
        description: Conditional routing rules
        items:
          type: object
          required:
            - to
          properties:
            when:
              type: string
              description: Jinja2 expression that evaluates to boolean
            to:
              type: string
              description: Target node name to route to
            default:
              type: boolean
              description: Is this the default route
              default: false

  file_config:
    type: object
    properties:
      path:
        type: string
        description: Single file path (supports Jinja2 templates)

      pattern:
        type: string
        description: Glob pattern for multiple files

      context:
        type: object
        description: Map context variables from other nodes
        additionalProperties:
          type: string

      format:
        type: string
        enum: [ auto, json, jsonl, csv, yaml, txt, pdf, docx, xlsx, html ]
        default: auto
        description: File format (auto-detected by default)

      encoding:
        type: string
        default: utf-8
        description: Text encoding for text files

      extract_text:
        type: boolean
        default: true
        description: Extract text from documents (PDF, DOCX, HTML)

      output_mode:
        type: string
        enum: [ content, list, dict ]
        default: content
        description: Output mode - content (single), list (records), dict (collection)

      merge:
        type: boolean
        default: false
        description: Merge multiple files into single output

      stream:
        type: boolean
        default: false
        description: Stream large files in chunks

      chunk_size:
        type: integer
        default: 1000
        description: Rows per chunk for streaming

      sample:
        type: number
        minimum: 0.0
        maximum: 1.0
        description: Sample fraction (0.0-1.0)

      limit:
        type: integer
        minimum: 1
        description: Limit number of records

      delimiter:
        type: string
        default: ","
        description: CSV delimiter

      has_header:
        type: boolean
        default: true
        description: CSV has header row

      skip_errors:
        type: boolean
        default: false
        description: Skip files/rows with errors
    oneOf:
      - required: [ path ]
      - required: [ pattern ]

  python_config:
    type: object
    properties:
      code:
        type: string
        description: Inline Python code to execute

      file:
        type: string
        description: Path to Python file (supports Jinja2 templates)

      function:
        type: string
        description: Function name to call if using file

      context:
        type: object
        description: Map context variables from other nodes
        additionalProperties:
          type: string

      timeout:
        type: integer
        minimum: 1
        maximum: 300
        default: 30
        description: Execution timeout in seconds

      memory_limit:
        type: string
        pattern: "^\\d+(\\.\\d+)?(KB|MB|GB)?$"
        default: "100MB"
        description: Memory limit (e.g., '100MB', '1GB')

      allowed_imports:
        type: array
        items:
          type: string
        default: [ ]
        description: List of allowed module imports
        examples:
          - [ math, statistics, collections ]
          - [ pandas, numpy ]

      max_output_size:
        type: integer
        minimum: 1024
        maximum: 104857600
        default: 10485760
        description: Maximum output size in bytes (10MB default)
    oneOf:
      - required: [ code ]
      - required: [ file ]
