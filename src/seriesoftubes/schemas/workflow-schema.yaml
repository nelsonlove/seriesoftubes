$schema: https://json-schema.org/draft/2020-12/schema
title: SeriesOfTubes Workflow Schema
description: Schema definition for SeriesOfTubes workflow YAML files
type: object
required:
  - name
  - nodes
properties:
  name:
    type: string
    description: Human-readable name for the workflow
    examples:
      - Company Enrichment Pipeline
      - Document Analysis Workflow
  
  description:
    type: string
    description: Detailed description of what the workflow does
  
  version:
    type: string
    pattern: "^\\d+\\.\\d+\\.\\d+$"
    description: Semantic version of the workflow
    default: "1.0.0"
    examples:
      - "1.0.0"
      - "2.1.3"
  
  inputs:
    type: object
    description: Input parameters for the workflow
    properties:
      required:
        type: array
        items:
          type: string
        description: List of required input parameter names
      schema:
        type: object
        description: JSON Schema for input validation
        additionalProperties:
          type: object
          properties:
            type:
              type: string
              enum: [string, number, boolean, array, object]
            description:
              type: string
            default:
              description: Default value if not provided
            enum:
              type: array
              description: Allowed values
            pattern:
              type: string
              description: Regex pattern for string validation
    examples:
      - required: [company_name]
        schema:
          company_name:
            type: string
            description: Name of the company to enrich
          include_github:
            type: boolean
            default: true
            description: Whether to search GitHub for the company
  
  nodes:
    type: object
    description: DAG nodes that make up the workflow
    additionalProperties:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum: [llm, http, route, file]
          description: Type of node to execute
        
        depends_on:
          type: array
          items:
            type: string
          description: List of node names this node depends on
          default: []
        
        config:
          type: object
          description: Node-specific configuration
          oneOf:
            - $ref: "#/definitions/llm_config"
            - $ref: "#/definitions/http_config"
            - $ref: "#/definitions/route_config"
            - $ref: "#/definitions/file_config"
  
  outputs:
    type: object
    description: Workflow outputs
    properties:
      schema:
        type: object
        description: JSON Schema for output validation
        additionalProperties:
          type: object
      mapping:
        type: object
        description: Map output fields to node outputs
        additionalProperties:
          type: string
    examples:
      - mapping:
          company_info: classify_company
          github_data: fetch_github
          analysis: deep_analysis

definitions:
  llm_config:
    type: object
    properties:
      provider:
        type: string
        enum: [openai, anthropic]
        default: openai
        description: LLM provider to use
      
      model:
        type: string
        description: Model identifier
        examples:
          - gpt-4
          - claude-3-opus-20240229
      
      prompt:
        type: string
        description: Inline prompt template (Jinja2)
      
      prompt_template:
        type: string
        description: Path to external prompt template file
      
      context:
        type: object
        description: Map context variables from other nodes
        additionalProperties:
          type: string
        examples:
          - data: fetch_data
            classification: classify_company
      
      schema:
        type: object
        description: JSON schema for structured extraction
        additionalProperties: true
      
      temperature:
        type: number
        minimum: 0
        maximum: 2
        default: 0.7
        description: LLM temperature setting
      
      max_tokens:
        type: integer
        minimum: 1
        description: Maximum tokens in response
    oneOf:
      - required: [prompt]
      - required: [prompt_template]
  
  http_config:
    type: object
    required:
      - url
    properties:
      url:
        type: string
        format: uri
        description: HTTP endpoint URL (supports Jinja2 templates)
      
      method:
        type: string
        enum: [GET, POST, PUT, DELETE, PATCH]
        default: GET
        description: HTTP method
      
      headers:
        type: object
        description: HTTP headers (supports Jinja2 templates)
        additionalProperties:
          type: string
      
      body:
        description: Request body (supports Jinja2 templates)
      
      auth:
        type: object
        description: Authentication configuration
        properties:
          type:
            type: string
            enum: [bearer, basic, api_key]
          token:
            type: string
            description: Auth token (supports env vars via Jinja2)
          header:
            type: string
            description: Header name for API key auth
      
      context:
        type: object
        description: Map context variables from other nodes
        additionalProperties:
          type: string
  
  route_config:
    type: object
    required:
      - routes
    properties:
      context:
        type: object
        description: Map context variables from other nodes
        additionalProperties:
          type: string
      
      routes:
        type: array
        description: Conditional routing rules
        items:
          type: object
          required:
            - condition
            - output
          properties:
            condition:
              type: string
              description: Jinja2 expression that evaluates to boolean
            output:
              description: Value to output if condition is true
      
      default:
        description: Default output if no conditions match
  
  file_config:
    type: object
    required:
      - path
    properties:
      path:
        type: string
        description: File path to read (supports Jinja2 templates)
      
      context:
        type: object
        description: Map context variables from other nodes
        additionalProperties:
          type: string
      
      format:
        type: string
        enum: [auto, json, csv, yaml, txt, pdf, docx, xlsx, html]
        default: auto
        description: File format (auto-detected by default)
      
      encoding:
        type: string
        default: utf-8
        description: Text encoding for text files
      
      csv_options:
        type: object
        description: CSV parsing options
        properties:
          delimiter:
            type: string
            default: ","
          has_header:
            type: boolean
            default: true