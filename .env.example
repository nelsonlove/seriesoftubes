# SeriesOfTubes Environment Configuration
# Copy this file to .env and update with your actual values

# ===== REQUIRED SECURITY SETTINGS =====

# JWT secret for authentication (REQUIRED)
# Generate with: openssl rand -hex 32
JWT_SECRET_KEY=your-secret-key-change-this-in-production

# ===== API KEYS =====

# LLM Provider API Keys (at least one required for LLM features)
# WARNING: Setting these enables integration tests that may cost money!
# Only set if you need LLM functionality
# OPENAI_API_KEY=sk-...
# ANTHROPIC_API_KEY=sk-ant-...

# ===== DATABASE CONFIGURATION =====

# Database URL (defaults to SQLite if not set)
# For development with Docker:
# DATABASE_URL=postgresql://seriesoftubes:development-password@localhost:5432/seriesoftubes
# For production, use PostgreSQL with SSL:
# DATABASE_URL=postgresql://user:password@localhost:5432/seriesoftubes?sslmode=require
DATABASE_URL=sqlite+aiosqlite:///~/.seriesoftubes/db.sqlite

# ===== REDIS CONFIGURATION =====

# Redis URL (defaults to localhost without auth)
# For development with Docker (no auth):
# REDIS_URL=redis://localhost:6379
# For production, use authentication:
# REDIS_URL=redis://:password@localhost:6379/0
REDIS_URL=redis://localhost:6379

# ===== API CONFIGURATION =====

# API base URL (for CLI client)
SERIESOFTUBES_API_URL=http://localhost:8000

# CORS origins (comma-separated for multiple)
# For production, specify exact origins:
# CORS_ORIGINS=https://app.yourdomain.com,https://www.yourdomain.com
CORS_ORIGINS=http://localhost:3000

# ===== SECURITY SETTINGS =====

# Token expiration time in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Bcrypt rounds for password hashing (higher = more secure but slower)
BCRYPT_ROUNDS=12

# ===== FILE SECURITY (Optional) =====

# Enable file security restrictions
FILE_SECURITY_ENABLED=false

# Allowed directories for file access (JSON array)
# FILE_SECURITY_ALLOWED_DIRS=["/data/workflows", "/data/uploads"]

# Maximum file size in MB
# FILE_SECURITY_MAX_SIZE_MB=100

# ===== PYTHON NODE SECURITY (Optional) =====

# Default security level for Python nodes: strict, normal, or trusted
PYTHON_SECURITY_LEVEL=normal

# Execution timeout in seconds
PYTHON_EXECUTION_TIMEOUT=30

# ===== LOGGING & MONITORING =====

# Log level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Enable structured JSON logging
STRUCTURED_LOGGING=false

# ===== DEVELOPMENT SETTINGS =====

# Enable debug mode (NEVER use in production)
DEBUG=false

# Enable SQL query logging
SQL_ECHO=false

# ===== TESTING SETTINGS =====

# Enable expensive integration tests (costs money!)
# Only set this if you want to run real API tests
# RUN_EXPENSIVE_TESTS=false